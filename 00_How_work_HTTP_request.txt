I. Как работает браузер: HTTP запрос

Схема обмена данными между браузером и сервером с помощью HTTP протокола и его запросов.

1. Структура HTTP-запроса

Каждое HTTP-сообщение состоит из трёх частей, которые передаются в указанном порядке:
-- 1) строка заголовка - указан метод запроса (HTTP-метод), URI, версия протокола;
-- 2) заголовки - характеризуют тело сообзения, параметры передачи и прочие сведения;
-- 3) тело сообщения - данные сообщения

Заголовки и тело сообщения могут отсутствовать, но стартовая строка является обязательным элементом. 
Например:

GET http://www.xiper.net/HTTP/1.1

1.1. Методы HTTP

Метод указывает какая операция будет производиться над ресурсом, 
представляет собой короткое английское слово, записанное заглавными буквами.

Название метода чувствительно к регистру. В спецификации HTTP 1.1 определены следующие методы:
1) OPTIONS
2) GET
3) HEAD
4) POST
5) PUT
6) PATCH
7) DELETE
8) TRACE
9) LINK
10) UNLINK

Часто используемые 

1.1.2. Метод GET
GET - используется для запроса содержимого указанного ресурса.
Это с его помощью браузер получает HTML-код конкретной страницы и все её объекты
(изображения, CSS и т.п.) 
Тело такого запроса является пустым.

ОТВЕТ МОЖЕТ КЕШИРОВАТЬСЯ.

GET-запрос может передать параметры на сервер для уточнения запрашиваемых данных. 
Параметры запроса содержатся в адресе запроса, отделяются от URI знаком "?", пары параметр-значение разделяются символом "&".

Пример:

http://www.domain-name.com?param1=value1&m2=value2

Кроме обычных GET-запросов, есть ещё условные и частичные.

1.1.2.1 Условный GET 

1.1.2.2 Частичный GET 

1.1.4. Метод POST

POST предназначен для передачи данных на сервер. 
Тело такого запроса обычно содержит данные. Сообщение ответа сервера на выполнение метода POST не кэшируется.
Этот метод второй по популярности использования, в основном его применяют в веб формах для получения 
каких-то данных от пользователей ресурса ( формы входа, регистрации, отправка сообщений и т.п. ) 

Заметка: 
HTTP запросы можно разделить на безопасные ( когда пользователь просто запрашивает данные и не может повлиять на работу сервера) и
небезопасные (когда пользователь отправляет серверу определенные данные и потенциально может повлиять на его работу).

1.2. URI и версия протокола

URI - это последовательность символом (строка), идентифицирующая абстрактный или физический ресурс.

Версия протокола служит для указания, с какой версией протокола способен работать клиент\сервер и выглядит в виде HTTP/[версия].
Большинство поддерживают версию 1.1. (на момент написания статьи 18.10.2010)

2. Заголовки HTTP

Каждый запрос имеет как минимум свой заголовок, который сообщить серверу информацию о своей конфигурации и данные 
о форматах документов, которые он может принимать.

Каждый ответ состоит из трёх частей: строка состояния ( содержит три поля: версию HTTP, код состояния и описание), заголовок ответа 
(информация о сервере и передаваемых данных) и сами данные. Первые две части преставлены тоже в текстовом виде.

Заметка: 
Вес передаваемые данные не влияет на размер заголовка.



...
http://xiper.net/learn/also-need-to-know/how-does-a-browser-HTTP-request
Посмотреть 
http://www.xiper.net/learn/also-need-to-know/how-does-a-browser-communicate-with-the-server.html
